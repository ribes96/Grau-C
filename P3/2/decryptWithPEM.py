#!/usr/bin/python3
import subprocess

import Crypto.PublicKey.RSA

# Le indicas el fichero PEM (que puedes generar con otro script)
# y el fichero que quieres descifrar y te lo descifra, generando
# el fichero "respuesta" con el mensaje descifrado

PEMfile = "prob3.PEM"
encFile = "albert.ribes.marza_RSA_RW.enc"

cmd = "openssl rsautl -decrypt -inkey" +  PEMfile + "-in" encFile + "-out respuesta"



# cmd = "openssl rsautl -decrypt -inkey prob3.PEM -in albert.ribes.marza_RSA_RW.enc -out respuesta"
cmdlist = cmd.split()
subprocess.run(cmdlist, stdout=subprocess.PIPE)





















# Esto se supone inútil, pero me da miedo borralo
# (Está en otro script)

# n = 13883564478855369906484485454184038270497003202052494098604697319212549591029829230700001597479504789032931295242015286932254426742588105107486509065584647123511688340081903152167823286168609306599636677775544506080893206218696765728385372891018283918529570398644229104126706781596839106635407280120492004966826027059771188307280814710580762484959162922829327125223862094417926683638631342959146651539093052789262774346160814294285902219581491935291074945116267040230555596298781939261249389955870273713988762923733293159385434415536514574878849224579390013439041844109572697914870592137097391149463732879558042682513
# e = 65537
# # Calculado con sage
# d= 3888804692591177889945156163426101141820856734059807958375977366812407843546921207683597499503048192811351141900875453899558943981471380219694673953902945927434946104626142425871564643853047302153738048643143117599630080512635862619222275816110329094899786743487070107945953528385082861292188709296609117524018360733698984977170770550644269215678204191781793126773022797855331740949004214105770864866556035095099166712403971187929296014923027804633298074614715168660484133571397613604038497914111213371075179764032026809502203063285834059353265210072397614187910001219586141294893450508854851551709718697801042108021
#
# p = 94266177458122941927132828992398965315422711723476292060636161703554844348027660790196863165533825576662294504046973609875949340717949391531472175394958826454656325442285055189327851215186377777035515660847288887101346590003081806808638378570850782927795741879802966706453096673898350556653544269089096624319
#
# q = 147280444091657812439764053099314568949047825813952584575570264411006566829150875073568997898019494575050003793150553668921459501404781676937548190213513475610504671419296611545480887338106863159257869140351443014216545081154519724117770791941168612162220784916046522511820444420064519366880034756473908926127

# obj = Crypto.PublicKey.RSA.construct((n,e,d,p,q))
# st = obj.exportKey(format='PEM')
# f = open("prob3.PEM", "wb")
# f.write(st)
# f.close()
